@use '@angular/material' as mat;

@include mat.core();

// $my-palette: mat.$indigo-palette;

$jewel-palette: (
 50: #E5ECFF,
 100: #C2D2EA,
 200: #A3B3CF,
 300: #8295B5,
 400: #6A7FA1,
 500: #526A8E,
 600: #445C7E,
 700: #354967,
 800: #263852,
 900: #13243A,
 contrast: (
   50: rgba(black, 0.87),
   100: rgba(black, 0.87),
   200: rgba(black, 0.87),
   300: white,
   400: white,
   500: white,
   600: white,
   700: white,
   800: white,
   900: white
 )
);

$primary-color:#3F51B5;

$my-primary: mat.define-palette(mat.$indigo-palette, 500);
$my-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// $my-warn: mat.define-palette(mat.$red-palette);
$my-warn: mat.define-palette($jewel-palette);

$my-theme: mat.define-light-theme((
 color: (
   primary: $my-primary,
   accent: $my-accent,
 )
));

$my-button-theme: mat.define-light-theme((
 color: (
   primary: $my-warn,
   accent: $my-primary
 )
));

// Emit theme-dependent styles for common features used across multiple components.
@include mat.core-theme($my-theme);

// Emit styles for MatButton based on `$my-theme`. Because the configuration
// passed to `define-light-theme` omits typography, `button-theme` will not
// emit any typography styles.
@include mat.button-theme($my-button-theme);

// Include the theme mixins for other components you use here.
